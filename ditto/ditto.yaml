apiVersion: apps/v1
kind: Deployment
metadata:
  name: ditto
  namespace: markov
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ditto
  template:
    metadata:
      labels:
        app: ditto
    spec:
      containers:
      - name: app
        image: docker.lan:5000/ditto:latest
        imagePullPolicy: Always
        env:
        - name: OAUTH
          valueFrom:
            secretKeyRef:
              name: ditto-slack-tokens
              key: OAUTH
        - name: BOT_USER_OAUTH
          valueFrom:
            secretKeyRef:
              name: ditto-slack-tokens
              key: BOT_USER_OAUTH
        - name: MARKOV_URL
          value: "http://markov.lan"
        ports:
        - name: http
          containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ditto
  namespace: markov
spec:
  type: ClusterIP
  selector:
    app: ditto
  clusterIP: None
  ports:
  - port: 80
    targetPort: http
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ditto
  namespace: markov
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "external"
spec:
  tls:
  - hosts:
    - bots.jali-clarke.ca
    secretName: jali-clarke-ca
  rules:
  - host: bots.jali-clarke.ca
    http:
      paths:
      - path: /ditto
        backend:
          serviceName: ditto
          servicePort: 80